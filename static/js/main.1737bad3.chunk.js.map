{"version":3,"sources":["firebase.ts","hooks/useRedux.ts","services/authorization.ts","store/authSlice.ts","components/Header.tsx","components/Layout.tsx","components/Progress.tsx","services/fetchProducts.ts","store/productsSlice.ts","components/MediaCard.tsx","pages/HomePage.tsx","services/reviewsApi.ts","store/reviewsSlice.ts","components/ReviewsList.tsx","utils/formatDate.ts","services/usersApi.ts","store/usersSlice.ts","components/CommentForm.tsx","pages/ProductPage.tsx","pages/SignUpPage.tsx","components/PublicRoute.tsx","pages/LoginPage.tsx","App.tsx","store/store.ts","index.tsx"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_FIREBASE_MESREACT_APP_FIREBASE_APP_IDAGING_SENDER_ID","firebase","initializeApp","db","firestore","auth","useAppDispatch","useDispatch","useAppSelector","useSelector","authSignUp","a","email","password","firstName","lastName","createUserWithEmailAndPassword","userCredential","user","currentUser","updateProfile","displayName","collection","doc","uid","set","authSignIn","signInWithEmailAndPassword","authSignOut","signOut","signUp","createAsyncThunk","response","signIn","authSlice","createSlice","name","initialState","authorized","loading","error","reducers","setUser","state","action","payload","removeError","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","selectAuth","useStyles","makeStyles","theme","root","marginBottom","spacing","title","marginRight","Header","dispatch","classes","AppBar","position","className","Toolbar","Typography","variant","Button","component","NavLink","to","color","onClick","Layout","children","container","Box","width","overflow","CssBaseline","pb","Container","maxWidth","Progress","display","justifyContent","mb","CircularProgress","fetchProducts","get","products","forEach","data","image","text","product","id","push","getProducts","productsSlice","selectProducts","media","height","MediaCard","history","useHistory","Card","CardActionArea","CardMedia","CardContent","gutterBottom","cardList","flexWrap","marginLeft","cardItem","paddingLeft","paddingRight","HomePage","map","el","String","Alert","severity","fetchReviews","orderBy","reviews","createdAt","productId","rate","userId","review","addReviewsApi","add","docRef","getReviews","addReview","docId","reviewsSlice","unshift","selectReviews","createStyles","backgroundColor","palette","background","paper","item","borderBottom","grey","itemTitle","alignItems","ReviewsList","users","reviewsArr","getUser","find","length","List","ListItem","date","moment","format","fetchUsers","getUsers","usersSlice","addUser","selectUsers","CommentForm","React","useState","comment","setComment","rating","setRating","onSubmit","event","preventDefault","Date","borderColor","Rating","value","onChange","newValue","TextField","fullWidth","label","multiline","rows","target","type","disabled","row","col","img","ProductPage","params","useParams","setProduct","useEffect","currentProduct","filter","src","alt","form","margin","formItem","flex","padding","formInput","errorLabel","secondary","main","fontSize","typography","overline","SignUpPage","useForm","register","handleSubmit","errors","watch","formState","noValidate","autoComplete","required","pattern","PublicRoute","props","path","LoginPage","App","onAuthStateChanged","userDate","onSnapshot","querySnapshot","exact","store","configureStore","reducer","authReducer","productsReducer","reviewsReducer","usersReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1737bad3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_MESREACT_APP_FIREBASE_APP_IDAGING_SENDER_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store/store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { auth } from '../firebase';\r\nimport { db } from '../firebase';\r\n\r\nexport const authSignUp = async ({\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n}: UserInputs) => {\r\n  const userCredential = await auth.createUserWithEmailAndPassword(\r\n    email,\r\n    password\r\n  );\r\n  let user = userCredential.user;\r\n  let currentUser = auth.currentUser;\r\n\r\n  currentUser?.updateProfile({\r\n    displayName: `${firstName} ${lastName}`,\r\n  });\r\n\r\n  db.collection('users')\r\n    .doc(user?.uid)\r\n    .set({\r\n      displayName: `${firstName} ${lastName}`,\r\n      email: user?.email,\r\n    });\r\n\r\n  return {\r\n    email: user?.email,\r\n    displayName: `${firstName} ${lastName}`,\r\n    uid: user?.uid,\r\n  };\r\n};\r\n\r\nexport const authSignIn = async ({ email, password }: UserLogin) => {\r\n  const userCredential = await auth.signInWithEmailAndPassword(email, password);\r\n  let user = userCredential.user;\r\n\r\n  return {\r\n    email: user?.email,\r\n    displayName: user?.displayName,\r\n    uid: user?.uid,\r\n  };\r\n};\r\n\r\nexport const authSignOut = async () => {\r\n  return auth.signOut();\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { authSignIn, authSignOut, authSignUp } from '../services/authorization';\nimport { RootState, AppThunk } from './store';\n\ninterface AuthState {\n  user: User;\n  loading: boolean;\n  error: string;\n  authorized: boolean;\n}\n\nconst initialState: AuthState = {\n  user: {\n    displayName: '',\n    uid: '',\n    email: ''\n  },\n  authorized: false,\n  loading: false,\n  error: ''\n};\n\nexport const signUp = createAsyncThunk(\n  'auth/signup',\n  async ({email, password, firstName, lastName}: UserInputs) => {\n    const response = await authSignUp({email, password, firstName, lastName});\n    return response;\n  }\n)\n\nexport const signIn = createAsyncThunk(\n  'auth/signin',\n  async ({email, password}: UserLogin) => {\n    const response = await authSignIn({email, password});\n    return response;\n  }\n)\n\nexport const signOut = createAsyncThunk(\n  'auth/signout',\n  async () => {\n    authSignOut();\n  }\n)\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = {\n        uid: action.payload.uid,\n        displayName: action.payload.displayName,\n        email: action.payload.email\n      };\n      state.authorized = true;\n    },\n    removeError: (state) => {\n      state.error = ''\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(signUp.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(signUp.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = {\n          uid: action.payload.uid as string,\n          displayName: action.payload.displayName as string,\n          email: action.payload.email as string\n        };\n        state.authorized = true;\n        state.error = '';\n      })\n      .addCase(signUp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n      .addCase(signIn.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(signIn.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = {\n          uid: action.payload.uid as string,\n          displayName: action.payload.displayName as string,\n          email: action.payload.email as string\n        };\n        state.authorized = true;\n        state.error = '';\n      })\n      .addCase(signIn.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n      .addCase(signOut.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(signOut.fulfilled, (state) => {\n        state.loading = false;\n        state.user = {\n          uid: '',\n          displayName: '',\n          email: ''\n        };\n        state.authorized = false;\n        state.error = '';\n      })\n      .addCase(signOut.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n  },\n});\n\nexport const { setUser, removeError } = authSlice.actions;\n\n\nexport const selectAuth = (state: RootState) => state.auth;\n\n\nexport default authSlice.reducer;\n","import { AppBar, Button, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAppSelector } from '../hooks/useRedux';\r\nimport { selectAuth, signOut } from '../store/authSlice';\r\nimport { useAppDispatch } from './../hooks/useRedux';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  }\r\n}))\r\n\r\nconst Header: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n  const auth = useAppSelector(selectAuth);\r\n\r\n  const handleSignOut = () => {\r\n    dispatch(signOut());\r\n  }\r\n\r\n  return (\r\n    <AppBar position='static' className={classes.root}>\r\n      <Toolbar>\r\n        <Typography variant='h6' className={classes.title}>\r\n          <Button component={NavLink} to='/' color='inherit'>Recomendation network</Button>\r\n        </Typography>\r\n        {!auth.authorized && <Button component={NavLink} to='/login' color='inherit'>Login</Button>}\r\n        {!auth.authorized && <Button component={NavLink} to='/signup' color='inherit'>Sign Up</Button>}\r\n        {auth.authorized && <Button component={NavLink} to='/' color='inherit' onClick={handleSignOut}>Logout</Button>}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Container, CssBaseline } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Header from './Header';\r\n\r\ninterface LayoutProps {\r\n  container?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children, container = 'md' }) => {\r\n  return (\r\n    <Box position='relative' width='100%' overflow='hidden'>\r\n      <CssBaseline />\r\n      <Header />\r\n\r\n      <Box component='main' pb={5}>\r\n        <Container maxWidth={container}>\r\n          <>{children}</>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Box, CircularProgress } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface ProgressProps {\r\n  loading: boolean;\r\n}\r\n\r\nconst Progress: React.FC<ProgressProps> = ({ loading }) => {\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Box display='flex' justifyContent='center' mb={2}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import { db } from '../firebase';\r\n\r\nexport const fetchProducts = async (): Promise<Product[]> => {\r\n  const collection = await db.collection('products').get();\r\n  let products: Product[] = [];\r\n\r\n  collection.forEach(doc => {\r\n    const { title, image, text } = doc.data();\r\n\r\n    const product: Product = {\r\n      id: doc.id,\r\n      title,\r\n      image,\r\n      text,\r\n    };\r\n\r\n    products.push(product);\r\n  });\r\n\r\n  return products;\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from './store';\nimport { fetchProducts } from './../services/fetchProducts';\n\ninterface ProductState {\n  products: Product[];\n  loading: boolean;\n  error: string;\n}\n\nconst initialState: ProductState = {\n  products: [],\n  loading: false,\n  error: ''\n};\n\n\nexport const getProducts = createAsyncThunk(\n  'products/getProducts',\n  async () => {\n    const response = await fetchProducts();\n    return response;\n  }\n);\n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    \n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(getProducts.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.products = action.payload;\n        state.error = '';\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n  },\n});\n\nexport const { } = productsSlice.actions;\n\n\nexport const selectProducts = (state: RootState) => state.products;\n\n\nexport default productsSlice.reducer;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst MediaCard: React.FC<Product> = ({id, title, image, text}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleHistory = () => {\r\n    history.push(`/product/${id}`);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} onClick={handleHistory}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant='body2' color='textSecondary' component='p'>\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MediaCard;","import React, { useEffect } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport Progress from '../components/Progress';\r\nimport { selectProducts } from '../store/productsSlice';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Box, Theme } from '@material-ui/core';\r\nimport MediaCard from '../components/MediaCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  cardList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: theme.spacing(3),\r\n    marginLeft: `${-theme.spacing(1)}px`,\r\n    marginRight: `${-theme.spacing(1)}px`,\r\n  },\r\n  cardItem: {\r\n    width: '33.33333%',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst HomePage: React.FC = () => {\r\n  const products = useAppSelector(selectProducts);\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Layout>\r\n      <Box className={classes.cardList}>\r\n        {products.products.map(el => (\r\n          <Box className={classes.cardItem} key={String(el.id)}>\r\n            <MediaCard {...el} />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n\r\n      {products.loading && <Progress loading={products.loading} />}\r\n      {products.error && <Alert severity='error'>{products.error}</Alert>}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { db } from '../firebase';\r\n\r\nexport const fetchReviews = async (): Promise<Review[]> => {\r\n  const collection = await db\r\n    .collection('reviews')\r\n    .orderBy('createdAt', 'desc')\r\n    .get();\r\n  let reviews: Review[] = [];\r\n\r\n  collection.forEach(doc => {\r\n    const { createdAt, productId, rate, text, userId } = doc.data();\r\n\r\n    const review: Review = {\r\n      id: doc.id,\r\n      createdAt,\r\n      productId,\r\n      rate,\r\n      text,\r\n      userId,\r\n    };\r\n\r\n    reviews.push(review);\r\n  });\r\n\r\n  return reviews;\r\n};\r\n\r\nexport const addReviewsApi = async (review: Review): Promise<string> => {\r\n  const docRef = await db.collection('reviews').add(review);\r\n  return docRef.id;\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from './store';\nimport { fetchProducts } from '../services/fetchProducts';\nimport { addReviewsApi, fetchReviews } from '../services/reviewsApi';\n\ninterface ReviewsState {\n  reviews: Review[];\n  loading: boolean;\n  error: string;\n}\n\nconst initialState: ReviewsState = {\n  reviews: [],\n  loading: false,\n  error: '',\n};\n\nexport const getReviews = createAsyncThunk('reviews/getReviews', async () => {\n  const response = await fetchReviews();\n  return response;\n});\n\nexport const addReview = createAsyncThunk(\n  'reviews/addReview',\n  async (review: Review) => {\n    const docId: string = await addReviewsApi(review);\n    return { ...review, id: docId };\n  }\n);\n\nexport const reviewsSlice = createSlice({\n  name: 'reviews',\n  initialState,\n  reducers: {},\n\n  extraReducers: builder => {\n    builder\n      .addCase(getReviews.pending, state => {\n        state.loading = true;\n      })\n      .addCase(getReviews.fulfilled, (state, action) => {\n        state.loading = false;\n        state.reviews = action.payload;\n        state.error = '';\n      })\n      .addCase(getReviews.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n      .addCase(addReview.pending, state => {\n        state.loading = true;\n      })\n      .addCase(addReview.fulfilled, (state, action) => {\n        state.loading = false;\n        state.reviews.unshift(action.payload);\n        state.error = '';\n      })\n      .addCase(addReview.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      });\n  },\n});\n\nexport const {} = reviewsSlice.actions;\n\nexport const selectReviews = (state: RootState) => state.reviews;\n\nexport default reviewsSlice.reducer;\n","import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { formatDate } from './../utils/formatDate';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    item: {\r\n      display: 'block',\r\n      borderBottom: `1px solid ${theme.palette.grey[500]}`,\r\n      '&:last-child': {\r\n        borderBottom: 0,\r\n      },\r\n    },\r\n    itemTitle: {\r\n      marginBottom: theme.spacing(1),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n  })\r\n);\r\n\r\ninterface ReviewsProps {\r\n  reviews: () => Review[];\r\n  users: User[];\r\n}\r\n\r\nconst ReviewsList: React.FC<ReviewsProps> = ({ reviews, users }) => {\r\n  const classes = useStyles();\r\n  const reviewsArr = reviews();\r\n\r\n  const getUser = (uid: string): string => {\r\n    return users.find(el => el.uid === uid)?.displayName as string;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h4'>Reviews</Typography>\r\n      {reviewsArr.length !== 0 ? (\r\n        <List className={classes.root}>\r\n          {reviewsArr.map(el => (\r\n            <ListItem className={classes.item} key={el.id}>\r\n              <div className={classes.itemTitle}>\r\n                <Typography variant='h6'>{getUser(el.userId)}</Typography>\r\n                <Typography variant='body2'>\r\n                  {formatDate(el.createdAt)}\r\n                </Typography>\r\n              </div>\r\n              <Typography>\r\n                <em>Rate:</em> <Typography component='span' color='secondary' display='inline'>{el.rate}</Typography>\r\n              </Typography>\r\n              <Typography>\r\n                <em>Comment:</em> <Typography component='span' color='primary' display='inline'>{el.text}</Typography>\r\n              </Typography>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : <Typography>no reviews</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import moment from 'moment';\r\n\r\nexport const formatDate = (date: string): string => {\r\n  return moment(date).format('lll');\r\n}","import { db } from '../firebase';\r\n\r\nexport const fetchUsers = async (): Promise<User[]> => {\r\n  const collection = await db.collection('users').get();\r\n  let users: User[] = [];\r\n  \r\n  collection.forEach(doc => {\r\n    const { displayName, email } = doc.data();\r\n\r\n    const user: User = {\r\n      uid: doc.id,\r\n      displayName,\r\n      email\r\n    };\r\n\r\n\r\n    users.push(user);\r\n  });\r\n\r\n  return users;\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from './store';\nimport { fetchUsers } from './../services/usersApi';\n\ninterface UsersSlice {\n  users: User[];\n  loading: boolean;\n  error: string;\n}\n\nconst initialState: UsersSlice = {\n  users: [],\n  loading: false,\n  error: ''\n};\n\n\nexport const getUsers = createAsyncThunk(\n  'users/getUsers',\n  async () => {\n    const response = await fetchUsers();\n    return response;\n  }\n);\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(getUsers.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.users = action.payload;\n        state.error = '';\n      })\n      .addCase(getUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message as string;\n      })\n  },\n});\n\nexport const { } = usersSlice.actions;\n\n\nexport const selectUsers = (state: RootState) => state.users;\n\n\nexport default usersSlice.reducer;\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Theme, Typography, TextField, Button } from '@material-ui/core';\r\nimport { Rating } from '@material-ui/lab';\r\nimport { useAppDispatch } from './../hooks/useRedux';\r\nimport { addReview } from '../store/reviewsSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\ninterface CommentFormProps {\r\n  productId: string;\r\n  userId: string;\r\n}\r\n\r\nconst CommentForm: React.FC<CommentFormProps> = ({ productId, userId }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [comment, setComment] = React.useState<string>('');\r\n  const [rating, setRating] = React.useState<number | null>(0);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(\r\n      addReview({\r\n        createdAt: String(new Date()),\r\n        productId,\r\n        userId,\r\n        rate: rating,\r\n        text: comment,\r\n      } as Review)\r\n    );\r\n\r\n    setComment('');\r\n    setRating(0);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <Box mb={1} borderColor='transparent'>\r\n        <Typography component='legend'>Rating:</Typography>\r\n        <Rating\r\n          name='simple-controlled'\r\n          value={rating}\r\n          onChange={(event, newValue) => {\r\n            setRating(newValue);\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box mb={1}>\r\n        <TextField\r\n          fullWidth\r\n          id='comment'\r\n          label='Comment...'\r\n          multiline\r\n          rows={4}\r\n          variant='outlined'\r\n          value={comment}\r\n          onChange={event => {\r\n            setComment(event.target.value);\r\n          }}\r\n        />\r\n      </Box>\r\n      <Button\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n        disabled={comment === ''}\r\n      >\r\n        Add comment\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Theme, Typography } from '@material-ui/core';\r\nimport { useParams } from 'react-router';\r\nimport { useAppSelector } from '../hooks/useRedux';\r\nimport { selectProducts } from '../store/productsSlice';\r\nimport { selectReviews } from '../store/reviewsSlice';\r\nimport ReviewsList from '../components/ReviewsList';\r\nimport { selectUsers } from '../store/usersSlice';\r\nimport CommentForm from '../components/CommentForm';\r\nimport { selectAuth } from '../store/authSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  row: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginLeft: `-${theme.spacing(3)}px`,\r\n    marginRight: `-${theme.spacing(3)}px`,\r\n  },\r\n  col: {\r\n    width: '50%',\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const classes = useStyles();\r\n  const params = useParams<{ id: string }>();\r\n  const products = useAppSelector(selectProducts);\r\n  const reviews = useAppSelector(selectReviews);\r\n  const auth = useAppSelector(selectAuth);\r\n  const users = useAppSelector(selectUsers);\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n\r\n  useEffect(() => {\r\n    const currentProduct: Product = products.products.filter(\r\n      el => el.id === params.id\r\n    )[0];\r\n\r\n    setProduct(currentProduct);\r\n  }, [products]);\r\n\r\n  const filterReviews = (reviewsArr: Review[]): Review[] => {\r\n    return reviewsArr\r\n      ? reviewsArr.filter(el => el.productId === params.id)\r\n      : [];\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {product && (\r\n        <div className={classes.row}>\r\n          <div className={classes.col}>\r\n            <img\r\n              className={classes.img}\r\n              src={product.image}\r\n              alt={product.title}\r\n            />\r\n            <Typography variant='h3' className={classes.title}>\r\n              {product.title}\r\n            </Typography>\r\n            <Typography variant='body1'>{product.text}</Typography>\r\n          </div>\r\n          <div className={classes.col}>\r\n            {auth.authorized && <CommentForm productId={params.id} userId={auth.user.uid}/>}\r\n            <ReviewsList\r\n              reviews={() => filterReviews(reviews.reviews)}\r\n              users={users.users}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React, {useEffect} from 'react';\r\nimport { TextField, makeStyles, Theme, Button } from '@material-ui/core';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport Layout from '../components/Layout';\r\nimport { useAppDispatch, useAppSelector } from './../hooks/useRedux';\r\nimport { selectAuth, signUp, removeError } from '../store/authSlice';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    margin: `0 ${-theme.spacing(1)}px`,\r\n  },\r\n  formItem: {\r\n    flex: '1 1 50%',\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  formInput: {\r\n    width: '100%',\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.secondary.main,\r\n    fontSize: theme.typography.overline.fontSize,\r\n  },\r\n}));\r\n\r\nconst SignUpPage: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const auth = useAppSelector(selectAuth);\r\n  const classes = useStyles();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm<UserInputs>();\r\n\r\n  useEffect(() => {\r\n    dispatch(removeError());\r\n  }, [])\r\n\r\n  const onSubmit: SubmitHandler<UserInputs> = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n  }) => {\r\n    dispatch(signUp({ firstName, lastName, email, password }));\r\n  };\r\n\r\n  return (\r\n    <Layout container='sm'>\r\n      <form\r\n        className={classes.form}\r\n        noValidate\r\n        autoComplete='off'\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            id='firstName'\r\n            label='First Name'\r\n            variant='outlined'\r\n            {...register('firstName', { required: true })}\r\n          />\r\n          {errors.firstName && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            id='lastName'\r\n            label='Last Name'\r\n            variant='outlined'\r\n            {...register('lastName', { required: true })}\r\n          />\r\n          {errors.lastName && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            type='email'\r\n            id='email'\r\n            label='Email'\r\n            variant='outlined'\r\n            {...register('email', {\r\n              required: true,\r\n              pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n            })}\r\n          />\r\n          {errors.email && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            type='password'\r\n            id='password'\r\n            label='Password'\r\n            variant='outlined'\r\n            {...register('password', {\r\n              required: true,\r\n              pattern: /^(?=.*[A-Za-z])(?=.*\\d)[a-zA-Z0-9!@#$%^&*()~¥=_+}{\":;'?/>.<,'\\-\\|\\[\\]]{6,50}$/,\r\n            })}\r\n          />\r\n          {errors.password && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.formItem}>\r\n          <Button type='submit' variant='contained' color='primary'>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {auth.error && <Alert severity=\"error\">{auth.error}</Alert>}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react'\r\nimport { Redirect, Route, RouteProps } from 'react-router';\r\nimport { useAppSelector } from '../hooks/useRedux'\r\nimport { selectAuth } from '../store/authSlice'\r\n\r\nconst PublicRoute: React.FC<RouteProps> = (props) => {\r\n  const auth = useAppSelector(selectAuth);\r\n\r\n  return (\r\n    !auth.authorized ? <Route path={props.path} component={props.component} { ...props } /> : <Redirect to='/' />\r\n  )\r\n}\r\n\r\nexport default PublicRoute","import React, { useEffect } from 'react';\r\nimport { TextField, makeStyles, Theme, Button } from '@material-ui/core';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport Layout from '../components/Layout';\r\nimport { useAppDispatch, useAppSelector } from './../hooks/useRedux';\r\nimport { selectAuth, signIn, removeError } from '../store/authSlice';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    margin: `0 ${-theme.spacing(1)}px`,\r\n  },\r\n  formItem: {\r\n    flex: '1 1 50%',\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  formInput: {\r\n    width: '100%',\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.secondary.main,\r\n    fontSize: theme.typography.overline.fontSize,\r\n  },\r\n}));\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const auth = useAppSelector(selectAuth);\r\n  const classes = useStyles();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm<UserLogin>();\r\n\r\n  useEffect(() => {\r\n    dispatch(removeError());\r\n  }, [])\r\n\r\n  const onSubmit: SubmitHandler<UserLogin> = ({\r\n    email,\r\n    password,\r\n  }) => {\r\n    dispatch(signIn({ email, password }));\r\n  };\r\n\r\n  return (\r\n    <Layout container='sm'>\r\n      <form\r\n        className={classes.form}\r\n        noValidate\r\n        autoComplete='off'\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            type='email'\r\n            id='email'\r\n            label='Email'\r\n            variant='outlined'\r\n            {...register('email', {\r\n              required: true,\r\n              pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n            })}\r\n          />\r\n          {errors.email && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className={classes.formItem}>\r\n          <TextField\r\n            className={classes.formInput}\r\n            type='password'\r\n            id='password'\r\n            label='Password'\r\n            variant='outlined'\r\n            {...register('password', {\r\n              required: true,\r\n              pattern: /^(?=.*[A-Za-z])(?=.*\\d)[a-zA-Z0-9!@#$%^&*()~¥=_+}{\":;'?/>.<,'\\-\\|\\[\\]]{6,50}$/,\r\n            })}\r\n          />\r\n          {errors.password && (\r\n            <span className={classes.errorLabel}>This field is required</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.formItem}>\r\n          <Button type='submit' variant='contained' color='primary'>\r\n            Sign In\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {auth.error && <Alert severity=\"error\">{auth.error}</Alert>}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { auth, db } from './firebase';\nimport HomePage from './pages/HomePage';\nimport ProductPage from './pages/ProductPage';\nimport SignUpPage from './pages/SignUpPage';\nimport { useAppDispatch } from './hooks/useRedux';\nimport { setUser } from './store/authSlice';\nimport PublicRoute from './components/PublicRoute';\nimport LoginPage from './pages/LoginPage';\nimport { getProducts } from './store/productsSlice';\nimport { getReviews } from './store/reviewsSlice';\nimport { getUsers } from './store/usersSlice';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getProducts());\n    dispatch(getReviews());\n\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        const userDate: User = {\n          uid: user.uid,\n          displayName: user.displayName as string,\n          email: user.email as string,\n        };\n        dispatch(setUser(userDate));\n      }\n    });\n\n    db.collection('users').onSnapshot(querySnapshot => {\n      dispatch(getUsers());\n    });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/product/:id' exact component={ProductPage} />\n        <PublicRoute path='/login' exact component={LoginPage} />\n        <PublicRoute path='/signup' exact component={SignUpPage} />\n        <Redirect to='/' />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport productsReducer from './productsSlice';\nimport authReducer from './authSlice';\nimport reviewsReducer from './reviewsSlice';\nimport usersReducer from './usersSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    products: productsReducer,\n    reviews: reviewsReducer,\n    users: usersReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}